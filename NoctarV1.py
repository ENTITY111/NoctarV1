# -*- coding: utf-8 -*-
import sys, os, base64, marshal, zlib, types, traceback

# Encoded payload (base64 of zlib(marshal(code)))
BLOB = b''

def _run():
    try:
        code = marshal.loads(zlib.decompress(base64.b64decode(BLOB)))
        m = types.ModuleType("__main__")
        m.__file__ = os.path.abspath(sys.argv[0])
        m.__package__ = None
        m.__cached__ = None
        # expose argv and path like a normal script
        m.__dict__["__builtins__"] = __builtins__
        sys.modules["__main__"] = m
        exec(code, m.__dict__)
    except SystemExit:
        raise
    except Exception:
        traceback.print_exc()
        try:
            input("Press Enter to exit...")
        except Exception:
            pass

if __name__ == "__main__":
    _run()
